version: '2'
services:
  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - php
    ports:
      - '80:80'
    volumes:
      - ./:/app:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  php:
    build: ./docker/php
    image: crediting-php:7.4-amqp
    working_dir: /app
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app:delegated
    environment:
      YII_ENV: prod
      YII_DEBUG: '0'
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: '5672'
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: loans
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'

  worker-application-rpc:
    image: crediting-php:7.4-amqp
    depends_on:
      - php
      - postgres
      - rabbitmq
    working_dir: /app
    volumes:
      - ./:/app:delegated
    entrypoint: ["php"]
    command: ["/app/yii", "loan/rpc-submit"]
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: '5672'
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    restart: unless-stopped

  worker-application-async:
    image: crediting-php:7.4-amqp
    depends_on:
      - php
      - postgres
      - rabbitmq
    working_dir: /app
    volumes:
      - ./:/app:delegated
    entrypoint: ["php"]
    command: ["/app/yii", "loan/consume-apply-decision"]
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: '5672'
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    restart: unless-stopped

  worker-decision:
    image: crediting-php:7.4-amqp
    depends_on:
      - php
      - postgres
      - rabbitmq
    working_dir: /app
    volumes:
      - ./:/app:delegated
    entrypoint: ["php"]
    command: ["/app/yii", "decision/consume"]
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: '5672'
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    restart: unless-stopped

volumes:
  db-data:
  rabbit-data:
